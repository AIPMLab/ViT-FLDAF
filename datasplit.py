import os
import shutil
import numpy as np


def count_files(directory):
    count = 0
    for root, _, files in os.walk(directory):
        count += len(files)
    return count


def create_dir_structure(base_dir, N):
    for i in range(N):
        new_dir = os.path.join(base_dir, f"client_{i}")
        if not os.path.exists(new_dir):
            os.makedirs(new_dir)
        # for root, dirs, _ in os.walk(base_dir):
        #     if root != base_dir:
        #         continue
        #     for dir in dirs:
        #         new_sub_dir = os.path.join(new_dir, dir)
        #         if not os.path.exists(new_sub_dir):
        #             os.makedirs(new_sub_dir)


def dirichlet_distribution(alpha, N):
    return np.random.dirichlet(alpha * np.ones(N))


def distribute_files(base_dir, save_dir, N, total_files):
    # alpha = 0.6
    # dirichlet_samples = dirichlet_distribution(alpha, N)
    # print(dirichlet_samples)
    # dirichlet_samples = [0.51451878, 0.14796481, 0.33138751641]
    dirichlet_samples = [0.4, 0.3, 0.2, 0.1]
    # dirichlet_samples = [0.09358517, 0.61603834, 0.29037648]
    # dirichlet_samples = [0.17181574, 0.21687307, 0.61131118]
    # dirichlet_samples = [0.3333333,0.33333333,0.333333333]
    # file_indices = np.arange(total_files)
    # np.random.shuffle(file_indices)
    # print(file_indices, file_indices.shape)
    # print(dirichlet_samples, dirichlet_samples.shape)
    current_index = 0
    # length = [826, 822, 395, 827]
    # length = [1321, 1339, 1595, 1457]
    # length = [4674, 6528, 12800, 11200]
    # length = [867, 3323, 239, 4522,12875,2624,253]
    # length = [8960,6464,9600,8960]
    # length = [1038, 1098, 1007,1074]
    # length = [174, 248, 143, 207, 245, 244, 465, 175, 395, 143, 1088, 255, 237, 162, 336, 184, 417, 663, 294, 273, 203, 274, 279, 258, 204, 201, 230, 177, 936, 582, 251, 147, 151, 1189, 444, 481, 294, 824, 397, 300, 284, 163, 373, 252, 238, 336, 231, 1130, 485, 402, 627, 481, 263, 335, 256, 299, 277, 1187, 219, 161, 232, 231, 299, 237, 150, 159, 911, 861, 507, 159, 243, 274, 243, 260, 168, 245, 300, 203, 260, 389, 229, 247, 187, 308, 217, 93, 282, 141, 125, 257, 352, 852, 273, 583, 150, 245, 300, 269, 481, 215, 251, 264, 242, 429, 268, 300, 297, 240, 261, 299, 650, 220, 559, 197, 245, 594, 233, 240, 498, 298, 299, 262, 244, 99, 190, 110, 1167, 257, 205, 545, 303, 278, 295, 91, 228, 266, 276, 264, 665, 186, 263, 274, 261, 252, 542, 555, 225, 191, 229, 501, 668, 268, 233, 298, 208, 275, 226, 214, 207, 156, 931, 595, 342, 105, 261, 291, 548, 276, 210, 229, 239, 781, 147, 1085, 281, 297, 310, 281, 192, 246, 130, 264, 679, 274, 298, 320, 177, 259, 211, 96, 1098, 255, 213, 291, 297, 302, 283, 221, 98, 176, 222, 291, 216, 205, 505, 619, 108, 267, 229, 162, 183, 185, 251, 198, 137, 270, 551, 289, 300, 217, 668, 289, 275, 243, 299, 174, 284, 1166, 136, 299, 247, 157, 225, 180, 269, 114, 395, 295, 271, 198, 247, 287, 264, 301, 233, 231, 214, 193, 306, 201, 292, 215, 297, 566, 220, 245, 169, 194, 256, 301, 497, 263, 241, 237, 221, 499, 601, 177, 261, 256, 194, 620, 288, 228, 143, 450, 282, 132, 531, 175, 268, 270, 678, 263, 300, 649, 282, 635, 201, 491, 657, 223, 145, 124, 188, 435, 244, 125, 253, 287, 209, 519, 248, 566, 219, 251, 633, 468, 229, 221, 294, 214, 237, 117, 210, 676, 605, 923, 220, 222, 239, 279, 492, 227, 312, 215, 274, 202, 531, 249, 279, 129, 388, 842, 299, 1089, 230, 644, 255, 287, 189, 336, 353, 297, 255, 129, 113, 272, 253, 271, 299, 245, 495, 300, 294, 591, 225, 412, 283, 277, 205, 812, 537, 242, 324, 197, 256, 156, 256, 227, 197, 245, 279, 121, 348, 235, 190, 229, 282, 267, 255, 118, 249, 180, 297, 275, 249, 246, 224, 292, 275, 264, 239, 486, 249, 270, 949, 189, 298, 271, 123, 299, 588, 180, 215, 445, 228, 180, 174, 288, 297, 239, 414, 300, 262, 276, 291, 582, 282, 613, 543, 294, 210, 347, 257, 273, 251, 215, 226, 199, 205, 187, 263, 193, 696, 373, 295, 237, 95, 215, 279, 558, 239, 238, 161, 192, 647, 251, 565, 437, 660, 150, 238, 459, 176, 298, 225, 93, 243, 194, 281, 272, 257, 276, 253, 341, 261, 243, 169, 561, 155, 195, 250, 792, 248, 163, 237, 837, 647, 148, 205, 294, 230, 246, 527, 265, 159, 271, 246, 252, 286, 281, 246, 280, 251, 141, 168, 143, 161, 483, 198, 195, 162, 275, 293, 288, 193, 199, 241, 275, 299, 368, 298, 217, 277, 287, 168, 535, 230, 237, 276, 496, 218, 253, 188, 607, 300, 269, 299, 185, 284, 256, 256, 229, 453, 300, 199, 143, 295, 255, 632, 300, 479, 295, 741, 281, 766, 782, 270, 156, 269, 300, 209, 297, 265, 191, 127, 259, 339, 874, 117, 238, 1095, 305, 493, 750, 300, 186, 95, 233, 251, 259, 198, 117, 225, 294, 197, 221, 264, 188, 155, 275, 186, 251, 278, 246, 276, 298, 245, 190, 104, 233, 156, 236, 299, 877, 290, 270, 247, 270, 296, 199, 183, 174, 568, 777, 289, 1192, 263, 266, 642, 118, 269, 271, 853, 494, 291, 205, 261, 302, 289, 280, 166, 135, 581, 309, 180, 273, 972, 261, 210, 227, 252, 295, 199, 293, 272, 362, 187, 801, 211, 475, 279, 474, 298, 242, 832, 240, 267, 185, 259, 270, 115, 162, 235, 272, 249, 245, 738, 295, 263, 269, 473, 205, 199, 294, 239, 221, 237, 169, 274, 270, 296, 453, 167, 216, 118, 291, 229, 246, 278, 256, 300, 267, 263, 239, 128, 1189, 295, 381, 563, 261, 239, 208, 261, 531, 204, 281, 126, 179, 268, 196, 254, 508, 267, 213, 222, 216, 234, 159, 201, 253, 220, 324, 267, 215, 279, 172, 221, 296, 201, 196, 285, 291, 177, 251, 172, 259, 536, 109, 311, 258, 276, 288, 531, 248, 202, 281, 233, 230, 299, 532, 105, 226, 242, 529, 248, 195, 152, 405, 485, 195, 181, 291, 1001, 297, 242, 515, 193, 291, 291, 278, 213, 227, 423, 267, 243, 342, 294, 157, 198, 420, 822, 290, 229, 828, 408, 192, 258, 252, 271, 536, 230, 125, 113, 151, 254, 272, 543, 254, 218, 643, 205, 257, 665, 629, 221, 273, 220, 405, 103, 573, 265, 855, 273, 300, 185, 593, 298, 188, 239, 299, 300, 253, 295, 291, 156, 236, 297, 278, 234, 202, 228, 289, 299, 215, 192, 160, 759, 365, 272, 461, 1096, 202, 295, 588, 222, 343, 265, 455, 299, 858, 873, 577, 220, 234, 255, 193, 356, 230, 257, 95, 264, 205, 253, 378, 199, 205, 330, 269, 185, 298, 123, 180, 219, 349, 234, 219, 271, 102, 249, 274, 159, 127, 213, 653, 314, 223, 258, 195, 305, 160, 373, 186, 93, 270, 1174, 613, 537, 210, 184, 239, 616, 201, 265, 195, 258, 251, 168, 275, 203, 298, 749, 247, 297, 235, 314, 233, 229, 159, 217, 218, 493, 252, 258, 294, 250, 210, 286, 256, 132, 520, 263, 262, 312, 113, 288, 216, 191, 525, 279, 152, 191, 293, 298, 228, 299, 312, 179, 666, 252, 163, 217, 233, 157, 288, 221, 245, 267, 247, 257, 275, 206, 597, 153, 249, 255, 275, 648, 165, 243, 92, 210, 577, 409, 557, 280, 247, 178, 222, 727, 247, 552, 199, 251, 160, 263, 313, 445, 541, 245, 294, 203, 271, 351, 179, 507, 299, 276, 222, 178, 251, 237, 121, 143, 91, 145, 234, 694, 1062, 173, 345, 259, 300, 536, 207, 539, 192, 279, 143, 193, 205, 287, 258, 247, 102, 278, 253, 511, 287, 240, 799, 287, 571, 191, 264, 141, 242, 400, 1114, 266, 296, 149, 240, 238, 244, 259, 184, 533, 288, 154, 284, 249, 171, 277, 171, 298, 294, 263, 217, 591, 734, 215, 207, 284, 299, 780, 155, 499, 299, 99, 205, 243, 249, 262, 258, 141, 262, 267, 505, 713, 1191, 204, 595, 826, 370, 269, 523, 251, 268, 254, 255, 1194, 233, 231, 209, 201, 115, 210, 408, 217, 291, 237, 216, 276, 172, 187, 260, 292, 1199, 209, 298, 151, 247, 284, 277, 307, 231, 228, 167, 195, 141, 275, 276, 198, 593, 241, 242, 281, 650, 285, 228, 129, 246, 284, 151, 179, 687, 249, 238, 566, 274, 284, 247, 282, 294, 985, 285, 135, 485, 277, 384, 167, 222, 262, 469, 443, 283, 181, 234, 226, 265, 247, 270, 295, 290, 282, 216, 255, 230, 280, 284, 227, 223, 446, 479, 291, 357, 402, 217, 253, 211, 176, 237, 251, 613, 294, 619, 174, 297, 163, 299, 213, 107, 264, 145, 185, 408, 144, 200, 286, 208, 189, 126, 190, 163, 253, 239, 240, 245, 278, 227, 109, 300, 237, 337, 867, 170, 294, 173, 276, 297, 263, 261, 237, 476, 269, 166, 264, 139, 223, 256, 299, 232, 126, 235, 763, 149, 223, 281, 193, 219, 259, 210, 159, 279, 257, 279, 182, 755, 148, 940, 297, 223, 207, 171, 227, 295, 228, 100, 509, 171, 289, 199, 807, 277, 255, 137, 209, 200, 279, 227, 279, 754, 241, 292, 227, 227, 287, 855, 237, 256, 299, 239, 241, 235, 344, 269, 295, 200, 203, 246, 513, 257, 399, 297, 171, 281, 299, 226, 224, 239, 230, 941, 1061, 298, 282, 279, 445, 685, 322, 618, 279, 285, 475, 100, 183, 272, 607, 283, 246, 225, 457, 243, 282, 1062, 584, 297, 469, 471, 551, 335, 273, 587, 170, 175, 197, 255, 309, 1188, 281, 296, 248, 167, 299, 360, 293, 193, 192, 215, 120, 237, 646, 491, 622, 224, 239, 252, 236, 167, 111, 172, 174, 279, 390, 261, 265, 277, 587, 285, 225, 161, 246, 155, 152, 208, 200, 239, 605, 162, 1164, 319, 217, 255, 277, 331, 249, 259, 391, 306, 255, 914, 226, 254, 389, 1057, 298, 291, 396, 575, 143, 252, 162, 267, 272, 352, 231, 252, 759, 222, 258, 376, 259, 459, 103, 263, 459, 354, 135, 141, 247, 277, 598, 273, 256, 268, 291, 230, 297, 259, 237, 175, 226, 486, 630, 234, 299, 214, 517, 737, 345, 200, 287, 330, 253, 229, 255, 243, 258, 111, 264, 776, 298, 244, 792, 141, 251, 791, 291, 225, 257, 300, 560, 194, 227, 162, 253, 283, 259, 502, 228, 481, 563, 245, 184, 449, 282, 205, 255, 477, 212, 733, 284, 237, 252, 119, 288, 300, 274, 210, 141, 300, 217, 554, 217, 141, 161, 300, 384, 281, 780, 295, 298, 300, 187, 191, 186, 258, 336, 290, 222, 263, 265, 453, 244, 621, 129, 128, 257, 233, 460, 153, 259, 177, 309, 233, 519, 293, 178, 277, 272, 401, 238, 188, 184, 299, 744, 290, 258, 315, 259, 210, 595, 213, 170, 297, 233, 288, 559, 317, 233, 283, 318, 229, 181, 212, 203, 300, 217, 655, 477, 230, 198, 264, 221, 300, 515, 290, 249, 291, 220, 263, 184, 193, 269, 206, 569, 223, 435, 163, 219, 619, 515, 174, 495, 259, 118, 291, 209, 297, 538, 273, 279, 207, 226, 233, 183, 674, 249, 209, 239, 294, 259, 299, 281, 162, 240, 271, 237, 261, 129, 267, 241, 128, 198, 503, 240, 295, 241, 851, 252, 196, 293, 216, 294, 176, 275, 107, 198, 257, 222, 357, 257, 217, 273, 204, 300, 264, 592, 109, 299, 247, 415, 505, 282, 247, 199, 296, 834, 188, 297, 257, 546, 1064, 157, 243, 467, 240, 95, 222, 293, 813, 105, 235, 273, 739, 298, 856, 200, 252, 222, 167, 193, 148, 276, 334, 561, 204, 753, 270, 157, 300, 274, 195, 172, 237, 300, 240, 510, 471, 235, 298, 298, 297, 100, 280, 425, 595, 289, 578, 160, 157, 273, 127, 189, 255, 256, 264, 307, 230, 296, 139, 155, 589, 228, 267, 264, 289, 268, 270, 115, 154, 266, 157, 595, 203, 243, 245, 263, 172, 300, 295, 276, 150, 116, 246, 364, 192, 250, 105, 275, 253, 210, 741, 276, 169, 215, 217, 282, 175, 510, 256, 546, 704, 272, 266, 261, 271, 561, 289, 271, 191, 257, 249, 156, 561, 277, 281, 467, 444, 267, 293, 145, 185, 291, 175, 128, 197, 683, 298, 1191, 229, 224, 666, 256, 315, 277, 252, 504, 253, 164, 576, 172, 175, 231, 304, 269, 561, 211, 285, 295, 231, 120, 505, 246, 259, 174, 300, 491, 189, 249, 243, 158, 259, 712, 883, 913, 248, 252, 261, 611, 285, 209, 299, 267, 231, 245, 255, 286, 515, 238, 138, 247, 300, 291, 204, 106, 274, 217, 185, 233, 237, 615, 246, 284, 267, 273, 246, 181, 273, 291, 403, 271, 522, 257, 479, 300, 179, 341, 297, 284, 213, 171, 279, 241, 283, 99, 287, 152, 217, 492, 240, 285, 250, 261, 250, 115, 239, 161, 161, 287, 229, 126, 239, 184, 220, 179, 207, 179, 220, 177, 545, 238, 257, 235, 264, 217, 165, 256, 204, 238, 237, 558, 180, 237, 168, 295, 293, 979, 293, 259, 185, 290, 275, 229, 177, 217, 582, 267, 251, 294, 103, 594, 296, 180, 231, 253, 257, 226, 267, 295, 249, 232, 138, 164, 287, 318, 294, 906, 225, 299, 225, 1176, 440, 300, 284, 217, 245, 287, 154, 276, 127, 202, 250, 245, 609, 279, 246, 290, 685, 163, 288, 489, 211, 335, 232, 168, 245, 610, 252, 131, 428, 249, 267, 235, 170, 296, 536, 1035, 300, 296, 184, 295, 487, 291, 239, 220, 161, 299, 137, 656, 224, 170, 553, 206, 243, 797, 403, 521, 195, 198, 253, 269, 298, 243, 605, 292, 270, 265, 215]
    # length=[882,1437,612,561,361,1544,505,299,507,711,525,579,1301,325,1757,539,1714,758,1625,265,603,521,1358]
    # length = [4953,547,5121,8989,6198,6077,4002]
    length = [588, 5162, 3324, 5796, 10140]
    #length=[1621,1645,2000,1757]
    #length=[1067,3326,247,4822,13077,2627,253]
    for i in range(N):
        k = 0
        target_dir = os.path.join(save_dir, f"client_{i}/")
        # files_to_copy = int(dirichlet_samples[i] * total_files)
        for root, _, files in os.walk(base_dir):
            current_index = 0
            if root == base_dir:
                continue
            print('Class length is :', len(files))
            file_indices = np.arange(len(files))
            np.random.shuffle(file_indices)
            # print(file_indices, file_indices.shape)
            # dirichlet_samples = dirichlet_distribution(alpha, N)
            files_to_copy = int(dirichlet_samples[i] * length[k])
            k +=1
            print(files_to_copy)
            for _ in range(files_to_copy):
                file_to_copy = files[file_indices[current_index]]
                src_file_path = os.path.join(root, file_to_copy)
                dst_file_path = src_file_path.replace(save_dir, target_dir)
                root_path = root
                base_path = "train"
                root_index = root_path.find(base_path)
                root_path = root_path[root_index:]
                s_d = save_dir
                class_path = root_path.replace(root_path, target_dir)
                c_p = os.path.join(class_path, root_path)
                if not os.path.exists(c_p):
                    os.makedirs(c_p)
                print(root, root_path, c_p, class_path, src_file_path, dst_file_path)
                # dst_file_path = os.path.join(target_dir, )
                shutil.move(src_file_path, c_p)
                current_index += 1


base_dir = "C:/Users/PS/PycharmProjects/newda/RSNA-ICH/training"
save_dir = "C:/Users/PS/PycharmProjects/newda/RSNA-ICH/"
N = 4

total_files = count_files(base_dir)
print(total_files)
create_dir_structure(save_dir, N)
distribute_files(base_dir, save_dir, N, total_files)
